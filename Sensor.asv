classdef Sensor<handle
    properties
       H {}                     %Measurement matrix (in this case linearized)
       range {}                 %how far can the sensor work
       sigma {}                 %one for distance, the other for angular position
       sensed {}                %[distance,angle]
       position {}              %position of the sensor in the room
       inrange=true              %pretty selfexplanatory
%       quanta {}                %step of the sensor in [pos,angle]
    end
    methods
        function obj=Sensor(position,range,sigma)
            obj.position=position;
            obj.range=range;
            obj.sigma=sigma;
            obj.sensed=[0,0];
%           obj.quanta=[range/nticks(1),2*pi/nticks(2)];
        end
        function inRange(x)
            distance=sqrt((obj.position-x)*(obj.position-x)');
            if distance>obj.range
                obj.inrange=false;
                obj.sensed=[99999,99999];
                notify(obj,Cannotsense);
            else
                obj.inrange=true;
                notify(obj,Cansense);
            end
        end
        function sense(tiziochesimuove)
            %it measures distance and angle from the sensor, maybe do not
            %use sigma for angle but quanta ?
            obj.inRange(tiziochesimuove);
            if obj.inrange
                actualdistance=obj.position-tiziochesimuove;
                actualangle=atan2(actualdistance(2),actualdistance(1));
                obj.sensed=[sqrt(actualdistance*actualdistance');actualangle]+randn(2,1)*obj.sigma;
            else
                obj.sensed=[99999,99999];
            end
        end
    end
    events
        Cansense
        Cannotsense
    end
    
end
